@model ShadowTracker.Models.ViewModels.DashboardViewModel
@using Microsoft.AspNetCore.Identity
@using ShadowTracker.Services.Interfaces
@using ShadowTracker.Models.Enums
@using System.Linq

@inject UserManager<BTUser> UserManager
@inject IBTRolesService RolesService

@{

    Layout = "/Views/Shared/DevelopmentalLayout.cshtml";
    ViewData["Title"] = "Dashboard";
    BTUser btUser = await UserManager.GetUserAsync(User);
}

<!-- Styles -->
<style>
    .amDark { /*
        background-color: #30303d;*/
    }

    g > text > tspan {
        fill: white
    }

    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>
<div class="col">
    <div class="row">

<div class="mb-4 infobox-1 col-xl-4 col-md-4 col-sm-4 col-12 layout-spacing">
    <div class="info-icon">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-layers"><polygon points="12 2 2 7 12 12 22 7 12 2"></polygon><polyline points="2 17 12 22 22 17"></polyline><polyline points="2 12 12 17 22 12"></polyline></svg>
    </div>
    <h5 class="info-heading">Total Tickets</h5>
    <h3>@Model.Tickets.Count()</h3>
    <a class="info-link" href="">Insights <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></a>
</div>
<div class="mb-4 infobox-1 col-xl-4 col-md-4 col-sm-4 col-12 layout-spacing">
    <div class="info-icon">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="red" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-layers"><polygon points="12 2 2 7 12 12 22 7 12 2"></polygon><polyline points="2 17 12 22 22 17"></polyline><polyline points="2 12 12 17 22 12"></polyline></svg>
    </div>
    <h5 class="info-heading">Unassigned Tickets</h5>
    <h3>@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h3>
    <a class="info-link" href="">Insights <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></a>
</div>
<div class="mb-4 infobox-1 col-xl-4 col-md-4 col-sm-4 col-12 layout-spacing">
    <div class="info-icon">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-box"><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line></svg>
    </div>
    <h5 class="info-heading">Active Projects</h5>
    <h3>@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
    <a class="info-link" href="">Insights <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></a>
</div>
    </div>
</div>

@*Tickets Table Start*@
<div class="col-lg-12 col-md-12 col-sm-12 col-12 layout-spacing">
    <div class="card m-1 p-2">
        <div class="card-header">
            <h2>Tickets</h2>
        </div>
        <div class="card-body">

            @* Copy and format table from Unassigned Tickets *@
            <div class="table-responsive" style="overflow-y:auto;height:600px;">
                <table class="table table-hover">
                    <thead class="">
                        <tr>
                            @* Table header *@
                            <th>Title</th>
                            <th>Developer</th>
                            <th>Status</th>
                            <th>Priority</th>
                            <th>Date</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @* Table body *@
                        @foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
                        {
                            <tr>
                                <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><strong>@ticket.Title</strong></a> </td>
                                <td>
                                    @if (ticket.DeveloperUserId != null)
                                    {
                                        @ticket.DeveloperUser?.FullName
                                    }
                                    else
                                    {
                                        if (User.IsInRole(nameof(BTRoles.Admin)) || User.IsInRole(nameof(BTRoles.ProjectManager)))
                                        {
                                            <a class="btn btn-outline-jhprimary btn-rounded" asp-action="AssignDeveloper" asp-controller="Tickets" asp-route-id="@ticket.Id">Assign</a>
                                        }
                                    }
                                </td>
                                @if (ticket.TicketStatus.Name == "New")
                                {
                                    <td><span class="badge badge-success">@ticket.TicketStatus.Name </span></td>
                                }
                                else if (ticket.TicketStatus.Name == "Development")
                                {
                                    <td><span class="badge badge-development">@ticket.TicketStatus.Name </span></td>
                                }
                                else
                                {
                                    <td><span class="badge badge-other">@ticket.TicketStatus.Name </span></td>
                                }
                                @if (ticket.TicketPriority.Name == "Urgent")
                                {
                                    <td><span class="badge badge-urgent">@ticket.TicketPriority.Name </span></td>

                                }
                                else
                                {
                                    <td><span class="badge">@ticket.TicketPriority.Name </span></td>
                                }
                                <td>@ticket.Created.ToString("MM-dd-yyyy")</td>
                                <td>
                                    <a class="btn btn-rounded btn-outline-jhprimary" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@*Tickets Table End*@

@*Projects Table Start*@
<div class="col-xl-6 col-lg-12 col-md-12 col-sm-12 col-12 layout-spacing">
    <div class="card m-1 p-2">
        <div class="card-header">
            <h2>Projects</h2>
        </div>
        <div class="card-body">
            @* [Copy and format table from Unassigned Tickets] *@
            <div class="table-responsive" style="overflow-y:auto;height:520px;">
                <table class="table table-hover">
                    <thead class="">
                        <tr>
                            @* Table header *@
                            <th>Name</th>
                            <th>StartDate</th>
                            <th>EndDate</th>
                            <th>Priority</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @* Table body *@
                        @foreach (var project in Model.Projects.OrderByDescending(d => d.Created))
                        {
                            <tr>
                                <td><a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" style="color:white"><strong>@project.Name</strong></a></td>
                                <td><span style="font-size:small">@project.StartDate.Value.ToString("MM.dd.yyyy")</span></td>
                                <td><span style="font-size:small">@project.EndDate.Value.ToString("MM.dd.yyyy")</span></td>
                                @if (project.ProjectPriority.Name == "High")
                                {
                                    <td><span class="badge bg-high">@project.ProjectPriority?.Name</span></td>
                                }
                                else
                                {
                                    <td><span class="badge bg-dark">@project.ProjectPriority?.Name</span></td>

                                }
                                <td>
                                    <a class="btn btn-rounded btn-outline-jhprimary" asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id"></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@*Projects Table End*@

@*Morris Chart Start*@
<div class="col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12 layout-spacing">
    <div class="card col m-1 p-2">
        <div class="card-body">
            <h5>Tickets by Priority</h5>
            <p>[Morris Charts]</p>
            <!-- Morris: Donut -->
            <div class="col-md-12">
                <div id="legend" class="donut-legend" style="font-size:x-small; color: white!important"></div>
            </div>
            <div class="col-md-12">
                <div class="chart chart-md" id="morrisTicketPriority"></div>
            </div>
        </div>
    </div>
</div>
@*Morris Chart End*@

@*AM Chart Start*@

<div class="col-xl-8 col-lg-12 col-md-12 col-sm-12 col-12 layout-spacing">

    <div class="card col m-1 p-2 amDark">
        <div class="card-body" style="height:600px;">
            <h5>Project: Tickets vs Developers</h5>
            <p>[amCharts]</p>
            <!-- HTML -->
            <div class="amDark" id="chartdiv"></div>
        </div>
    </div>
</div>
@*AM Chart End*@




@section Scripts{

    <!-- BEGIN PAGE LEVEL PLUGINS/CUSTOM SCRIPTS -->
    @* Morris Donut Chart *@
    <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
    <script>

	var morrisDonutData = [{
		label: "Low",
		value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Low)).Count()
	}, {
		label: "Medium",
		value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Medium)).Count()
	}, {
		label: "High",
		value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.High)).Count()
	}, {
		label: "Urgent",
		value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Urgent)).Count()
	}];


	/*
	Morris: Donut
	*/
        if ($('#morrisTicketPriority').get(0)) {
            var donutChart = Morris.Donut({
            labelColor: "#fff",
			resize: true,
			element: 'morrisTicketPriority',
			data: morrisDonutData,
			colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
		});

		donutChart.options.data.forEach(function(label, i) {
			var legendItem = $('<span></span>').text( label['label'] + ": " +label['value']).prepend('<span>&nbsp;</span>');
			legendItem.find('span')
			  .css('backgroundColor', donutChart.options.colors[i])
			  .css('width', '20px')
			  .css('display', 'inline-block')
                .css('margin', '10px');
			$('#legend').append(legendItem)
		});
	};
    </script>
    <!-- *** Begin AM Charts *** -->
    <!-- Resources -->
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>

    <!-- Chart code -->
    <script>
        $.ajax({
            type: "POST",
            url: "/Home/AmCharts",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                am4core.ready(function () {

                    // Themes begin
                    // Themes end

                    // Create chart instance
                    var chart = am4core.create("chartdiv", am4charts.XYChart);


                    // Add data
                    chart.data = result;

                    // Create axes
                    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
                    categoryAxis.dataFields.category = "project";
                    categoryAxis.numberFormatter.numberFormat = "#";
                    categoryAxis.renderer.inversed = true;
                    categoryAxis.renderer.grid.template.location = 0;
                    categoryAxis.renderer.cellStartLocation = 0.1;
                    categoryAxis.renderer.cellEndLocation = 0.9;

                    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
                    valueAxis.renderer.opposite = true;


                    // Create series
                    function createSeries(field, name) {
                        var series = chart.series.push(new am4charts.ColumnSeries());
                        series.dataFields.valueX = field;
                        series.dataFields.categoryY = "project";
                        series.name = name;
                        series.columns.template.tooltipText = "{name}: [bold]{valueX}[/]";
                        series.columns.template.height = am4core.percent(100);
                        series.sequencedInterpolation = true;


                        var valueLabel = series.bullets.push(new am4charts.LabelBullet());
                        valueLabel.label.text = "{valueX}";
                        valueLabel.label.horizontalCenter = "left";
                        valueLabel.label.dx = 10;
                        valueLabel.label.hideOversized = false;
                        valueLabel.label.truncate = false;
                        valueLabel.label.fill = am4core.color("#fff");


                        var categoryLabel = series.bullets.push(new am4charts.LabelBullet());
                        categoryLabel.label.text = "{name}";
                        categoryLabel.label.horizontalCenter = "right";
                        categoryLabel.label.dx = -10;
                        categoryLabel.label.fill = am4core.color("#fff");
                        categoryLabel.label.hideOversized = false;
                        categoryLabel.label.truncate = false;

                    }

                    createSeries("tickets", "Tickets");
                    createSeries("developers", "Devs");

                }); // end am4core.ready()


            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });
    </script>

    <!-- *** End AM Charts *** -->
}